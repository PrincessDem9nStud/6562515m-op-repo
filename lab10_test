pipeline {
      agent any
	  parameters {
	  choice(
      	name: 'ROLL_OUT_S3',
      	choices: ['Prod Server', 'QA Server', 'Abort'],
      	description: 'Proceed to Roll out to Prod Server or Roll Back to QA Server?'
    	)
		}
      stages {
          stage('One') {
          steps {
            echo 'Continue from previous phase: Ready to deploy next environment.'
          }
          }
          stage('Two') {
          steps {
            input('Do you want to update to UAT container?')
          }
          }
          stage('Three') {
          steps {
                 sh '''#!/bin/bash
				
				#clean and recreate directory
                 puppet resource file /tmp/operate ensure=absent force=true;
                 puppet resource file /tmp/operate ensure=directory;

				#clone repo
	             cd /tmp/operate;
	             git clone https://github.com/PrincessDem9nStud/6562515m-op-repo.git;
                 
				#define varialbes
				 targets=puppetclient33.localdomain;
                 locate_script='/tmp/operate/6562515m-op-repo/script_to_run';

				#run Bolt script
                 bolt script run $locate_script -t $targets -u svradm -p user123 --no-host-key-check --run-as root
				'''
				echo "UAT container updated"
          }
          }
  		  stage('Four-33curl') {
          steps {
			script {
            	sh 'curl -Is http://localhost:3333 | head -n 1 > /tmp/operate/results-01';
			  }
          }
          }
          stage('Five') {
          steps {
			script { 
			def result = sh(script: 'cat /tmp/operate/results-01', returnStdout: true).trim()
				if ((result == 'HTTP/1.1 200 OK') && (params.ROLL_OUT_S3 == 'Prod Server')) {
        			echo "proceed to roll out to prod server"
    			} else if (params.ROLL_OUT_S3 == 'QA Server') {
        			echo "roll back to QA server"
    			} else if (params.ROLL_OUT_S3 == 'Abort') {
        			error("QA server fails after update and is rolled back")
    			}			
          }
		  }
		  }
          stage('Six') {
          steps {
                 sh '''#!/bin/bash
                 targets=puppetclient44.localdomain;
                 locate_script='/tmp/operate/6562515m-op-repo/script_to_run';
                 bolt script run $locate_script -t $targets -u svradm -p user123 --no-host-key-check --run-as root;
                 '''
                 echo "Production container updated"
          }
          }
          stage('Completed updating Operation') {
          steps {
            echo 'Completed updating to Production Container'
          }
          }
      }
}
