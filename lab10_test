pipeline {
      agent any
	  stages {
          stage('One') {
          steps {
			 sh '''#!/bin/bash
			
			# Define variables
			image_name="puppetclient33-image"
			container_name="puppetclient33"
			targets="puppetclient33.localdomain"

			# Check if image exists
			image_exist=$(docker images -q "$image_name")

			if (-n "$image_exist") {
	  			echo "Removing existing image: $image_name"
      			docker rmi -f "$image_name"
			} else {
      			echo "No existing image found. Creating new image..."
	  			docker commit "$container_name" "$image_name"
			}
			'''
			echo "puppetclient33-image checked"
          }
          }
          stage('Two') {
          steps {
            input('Do you want to update to UAT container?')
          }
          }
          stage('Three') {
          steps {
                 sh '''#!/bin/bash
				
				#clean and recreate directory
                 puppet resource file /tmp/operate ensure=absent force=true;
                 puppet resource file /tmp/operate ensure=directory;
				
				#clone repo
	             cd /tmp/operate;
	             git clone https://github.com/PrincessDem9nStud/6562515m-op-repo.git;
                 
				#define varialbes
				 targets=puppetclient33.localdomain;
                 locate_script='/tmp/operate/6562515m-op-repo/script_to_run';

				#run Bolt script
                 bolt script run $locate_script -t $targets -u svradm -p user123 --no-host-key-check --run-as root
				'''
				echo "UAT container updated"
          }
          }
  		  stage('Four-33curl') {
          steps {
			script {
            	sh 'curl -Is http://localhost:3333 | head -n 1 > /tmp/operate/results-01';
			  }
          }
          }
          stage('Five - choice') {
          steps {
			script { 
			def result = sh(script: 'cat /tmp/operate/results-01', returnStdout: true).trim()
				def v1 = input(
        		message: 'Proceed with rollout to Prod server or Roll back?',
        		parameters: [choice(name:' ', choices: ['Prod Server', 'QA Server'])]			
    				)		 		
					if ((result == 'HTTP/1.1 200 OK') && (v1 == 'Prod Server')) {
						echo "proceed to roll out to prod server"
					} else if (v1 == 'QA Server') {
						echo "roll back to QA server"
						error("Aborting")
					}			
          }
		  }
		  }
          stage('Six') {
          steps {
                 sh '''#!/bin/bash
                 targets=puppetclient44.localdomain;
                 locate_script='/tmp/operate/6562515m-op-repo/script_to_run';
                 bolt script run $locate_script -t $targets -u svradm -p user123 --no-host-key-check --run-as root;
                 '''
                 echo "Production container updated"
          }
          }
          stage('Completed updating Operation') {
          steps {
            echo 'Completed updating to Production Container'
          }
          }
      }
}
